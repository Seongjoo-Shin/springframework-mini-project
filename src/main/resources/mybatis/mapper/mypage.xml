<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.MypageDao">
	
	<resultMap id="userMap" type="user">
	    <result property="userId" column="user_id"/>
	    <result property="userPassword" column="user_password"/>
	    <result property="userEmail" column="user_email"/>
	    <result property="userName" column="user_name"/>
	    <result property="userPhone" column="user_phone"/>
	    <result property="userNickname" column="user_nickname"/>
	    <result property="userRole" column="user_role"/>
	    <result property="userEnabled" column="user_enabled"/>
	    <result property="userJoinDate" column="user_joindate"/>
	</resultMap>
	
	<resultMap id="freeboardMap" type="freeboard">
	    <result property="freeNo" column="free_no"/>
	    <result property="freeTitle" column="free_title"/>
	    <result property="freeContent" column="free_content"/>
	    <result property="freeWriter" column="freE_writer"/>
	    <result property="freeRegistDate" column="free_regist_date"/>
	    <result property="freeModifyDate" column="free_modify_date"/>
	    <result property="freeUseYN" column="free_use_YN"/>
	    <result property="freeHitCount" column="free_hit_count"/>
	</resultMap>
	
	<resultMap id="marketboardMap" type="marketboard">
	    <result property="marketNo" column="market_no"/>
	    <result property="marketTitle" column="market_title"/>
	    <result property="marketContent" column="market_content"/>
	    <result property="marketWriter" column="market_writer"/>
	    <result property="marketCategory" column="market_category"/>
	    <result property="marketRegistDate" column="market_regist_date"/>
	    <result property="marketModifyDate" column="market_modify_date"/>
	    <result property="marketUseYN" column="market_use_yn"/>
	    <result property="marketHitCount" column="market_hit_count"/>
	    <result property="marketPrice" column="market_price"/>
	    <result property="marketLikeCount" column="market_like_count"/>
	    <result property="marketSaleYN" column="market_sale_yn"/>
	</resultMap>
	
	<resultMap id="buildingMap" type="building">
	    <result property="buildingNo" column="building_no"/>
	    <result property="buildingName" column="building_name"/>
	    <result property="buildingAddr" column="building_addr"/>
	    <result property="buildingAddrDetail" column="building_addr_detail"/>
	    <result property="buildingLatitude" column="building_latitude"/>
	    <result property="buildingLongitude" column="building_longitude"/>
	    <result property="buildingTradeInfo" column="building_trade_info"/>
	    <result property="buildingTakeoverPrice" column="building_takeover_price"/>
	    <result property="buildingDepositPrice" column="building_deposit_price"/>
	    <result property="buildingMonthRent" column="building_month_rent"/>
	    <result property="buildingPrice" column="building_price"/>
	    <result property="buildingAvailableDate" column="building_available_date"/>
	    <result property="buildingDetailContent" column="building_detail_content"/>
	    <result property="buildingUseYN" column="building_use_yn"/>
	    <result property="buildingWriter" column="building_writer"/>
	    <result property="buildingSupplyArea" column="building_supply_area"/>
	    <result property="buildingDedicatedArea" column="building_dedicated_area"/>
	    <result property="buildingTotalFloor" column="building_total_floor"/>
	    <result property="buildingFloor" column="building_floor"/>
	    <result property="buildingOption" column="building_option"/>
	    <result property="buildingRegistDate" column="building_regist_date"/>
	    <result property="buildingEndDate" column="building_end_date"/>
	</resultMap>
	
	<resultMap id="messageMap" type="message">
	    <result property="messageNo" column="message_no"/>
	    <result property="messageTitle" column="message_title"/>
	    <result property="messageContent" column="message_content"/>
	    <result property="messageDate" column="message_date"/>
	    <result property="messageSender" column="message_sender"/>
	    <result property="messageReceiver" column="message_receiver"/>
	    <result property="messageReplyYN" column="message_reply_yn"/>
	    <result property="messageSendDel" column="message_send_del"/>
	    <result property="messageReceiveDel" column="message_receive_del"/>
	    
	</resultMap>
	
	<resultMap type="buildingfile" id="buildingFileDtoResult">
		<result column="building_no" property="buildingNo"/>
		<result column="building_file_no" property="buildingFileNo"/>
		<result column="attach_original_name" property="attachOriginalName"/>
		<result column="attach_save_name" property="attachSaveName"/>
		<result column="attach_type" property="attachType"/>
		<result column="panorama_check" property="panoramaCheck"/>
		<result column="building_image_file_data" property="imageFileData"/>
	</resultMap>
	
	<resultMap type="marketfile" id="marketFileDtoResult">
		<result column="market_no" property="marketNo"/>
		<result column="market_file_no" property="marketFileNo"/>
		<result column="attach_original_name" property="attachOriginalName"/>
		<result column="attach_save_name" property="attachSaveName"/>
		<result column="attach_type" property="attachType"/>
		<result column="market_image_file_data" property="imageFileData"/>
	</resultMap>
	
	<select id="selectUser" resultMap="userMap" parameterType="String">
		SELECT 
			* 
		FROM
			users 
		WHERE 
			user_id = #{userId}
	</select>
	
	<!-- 유저 비밀번호 검색 -->
	<select id="selectPassword" resultMap="userMap">
		SELECT 
			* 
		FROM
			users 
		WHERE 
			user_id = #{userId}
	</select>
	
	<!-- 유저 비밀번호 수정 -->
	<update id="updatePassword" parameterType="user">
		UPDATE 
			users 
		SET 
			user_password = #{userPassword} 
		WHERE 
			user_id = #{userId}
	</update>
	
	<!-- 유저 탈퇴 -->
	<update id="userWithdrawal" parameterType="user">
		DELETE FROM
			users
		WHERE
			user_id = #{userId}
	</update>
	
	<!--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 작성글 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<!-- 자유게시판 -->
	<select id="selectAllFreeBoard" resultType="Integer" parameterType="String">
		SELECT 
			count(*) 
		FROM 
			freeboards 
		WHERE
			free_writer = #{userId} and free_use_yn = 1
	</select>
	
	<select id="selectFreeBoardList" parameterType="pager" resultMap="freeboardMap">
		<![CDATA[
		SELECT rnum, free_no, free_title, free_writer, free_regist_date, free_modify_date
		FROM (
		  SELECT rnum, free_no, free_title, free_writer, free_regist_date, free_modify_date
		  FROM (
		    SELECT ROWNUM as rnum, free_no, free_title, free_writer, free_regist_date, free_modify_date
		    FROM freeboards
		    WHERE free_writer = #{userId} and free_use_yn = 1
		    ORDER BY free_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>

	
	<delete id="deleteYnMyPosting" parameterType="Integer">
		DELETE FROM 
			freeboards 
		WHERE 
			free_no = #{freeNo}
	</delete>	
	
	<!-- 거래게시판 -->
	<select id="selectAllMarketBoard" resultType="Integer" parameterType="String">
		SELECT 
			count(*) 
		FROM 
			marketboards 
		WHERE
			market_writer = #{userId} and market_use_yn = 1
	</select>
	
	<select id="selectMarketBoardList" parameterType="pager" resultMap="marketboardMap">
		<![CDATA[
		SELECT rnum, market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		FROM (
		  SELECT ROWNUM as rnum, market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		  FROM (
		    SELECT market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		    FROM marketboards
		    WHERE market_writer = #{userId} and market_use_yn = 1
		    ORDER BY market_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>
	
	<delete id="deleteYnMyMarket" parameterType="Integer">
		DELETE FROM 
			marketboards 
		WHERE 
			market_no = #{marketNo}
	</delete>
	
	<update id="updateSalesYN" parameterType="Integer">
		UPDATE
			marketboards
		SET
			market_sale_yn = 0
		WHERE
			market_no = #{marketNo}
	</update>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  인수매물  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<select id="selectAllBuilding" resultType="Integer" parameterType="String">
		SELECT 
			count(*) 
		FROM 
			buildings 
		WHERE
			building_writer = #{userId} and building_use_yn = 1
	</select>
	
	<select id="selectBuildingList" parameterType="pager" resultMap="buildingMap">
		<![CDATA[
		SELECT rnum, building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		FROM (
		  SELECT ROWNUM as rnum, building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		  FROM (
		    SELECT building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		    FROM buildings
		    WHERE building_writer = #{userId} and building_use_yn = 1
		    ORDER BY building_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>

	
	<delete id="deleteYnMyBuilding" parameterType="Integer">
		DELETE FROM 
			buildings 
		WHERE 
			building_no = #{buildingNo}
	</delete>
	
	<!--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 쪽지함 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="selectReceiveMessageList" parameterType="pager" resultMap="messageMap">
		<![CDATA[
		SELECT rnum, message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		FROM (
		  SELECT ROWNUM as rnum, message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		  FROM (
		    SELECT message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		    FROM messages
		    WHERE message_receiver = #{userId} and message_receive_del = 1
		    ORDER BY message_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>
	
	<select id="selectSendMessageList" parameterType="pager" resultMap="messageMap">
		<![CDATA[
		SELECT rnum, message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		FROM (
		  SELECT ROWNUM as rnum, message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		  FROM (
		    SELECT message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn, message_send_del, message_receive_del
		    FROM messages
		    WHERE message_sender = #{userId} and message_send_del = 1
		    ORDER BY message_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>
	
	<select id="selectReceiveMessageAll" resultType="Integer" parameterType="String">
		SELECT 
			count(*) 
		FROM 
			messages 
		WHERE
			message_receiver = #{userId} and message_receive_del = 1
	</select>
	
	<select id="selectSendMessageAll" resultType="Integer" parameterType="String">
		SELECT 
			count(*) 
		FROM 
			messages 
		WHERE
			message_sender = #{userId} and message_send_del = 1
	</select>
	
	<update id="deleteMySendMessage" parameterType="Integer">
		UPDATE
			messages 
		SET
			message_send_del = 0
		WHERE
			message_no = #{messageNo}
	</update>
	
	<update id="deleteMyReceiveMessage" parameterType="Integer">
		UPDATE
			messages 
		SET
			message_receive_del = 0
		WHERE
			message_no = #{messageNo}
	</update>
	
	<select id="selectMessageByNo" parameterType="Integer" resultMap="messageMap">
		SELECT
			message_no, message_title, message_content, message_date, message_sender, message_receiver, message_reply_yn
		FROM 
			messages
		WHERE
			message_no = #{messageNo}
	</select>
	
	<insert id="insertMessage" parameterType="message">
		INSERT INTO 
			messages
		VALUES (
			messages_seq.nextval, 
			#{messageTitle}, 
			#{messageContent}, 
			sysdate, 
			#{messageSender}, 
			#{messageReceiver}, 
			0,
			1,
			1
		)
	</insert>
	
	<update id="updateReplyYN" parameterType="Integer">
		UPDATE
		    messages   
		SET 
		    message_reply_yn = 1   
		WHERE    
			message_no = #{messageNo}
	</update>
	
	<!--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 찜목록 인수 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="selectLikeBuildingCnt" parameterType="String" resultType="Integer">
		SELECT
			count(*)
		FROM
			likelists
		WHERE
			like_user_id = #{userId} and like_type = 'building'
	</select>
	
	<select id="selectLikeListWithBuilding" parameterType="pager" resultMap="buildingMap">
		<![CDATA[
		SELECT rnum, building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		FROM (
		  SELECT ROWNUM as rnum, building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		  FROM (
		    SELECT building_no, building_name, building_addr, building_addr_detail, building_latitude, building_longitude, building_trade_info, building_takeover_price, building_deposit_price, building_month_rent, building_price, building_available_date, building_detail_content, building_use_yn, building_writer, building_supply_area, building_dedicated_area, building_total_floor, building_floor, building_option, building_regist_date, building_end_date
		    FROM buildings b, likelists l
		    WHERE b.building_no = l.like_list_no and l.like_user_id = #{userId} and l.like_type = 'building'
		    ORDER BY b.building_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>
	
	<select id="selectImageFileByBuildingNo" parameterType="String" resultMap="buildingFileDtoResult">
		select * from buildingfiles
		where building_no = #{buildingNo}
	</select>
	
	<delete id="deleteLikeBuilding" parameterType="likelist">
		delete from likelists 
		where like_list_no = #{likeListNo} and like_user_id = #{likeUserId} and like_type = #{likeType}
	</delete>
	
	<update id="updateBuildingLikeCount" parameterType="Integer">
		UPDATE
		    buildings   
		SET 
		    building_like_count = building_like_count - 1    
		WHERE    
			building_no = #{buildingNo}
	</update>
	
	<!--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 찜목록 마켓 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="selectLikeMarketCnt" parameterType="String" resultType="Integer">
		SELECT
			count(*)
		FROM
			likelists
		WHERE
			like_user_id = #{userId} and like_type = 'market'
	</select>
	
	<select id="selectLikeListWithMarket" parameterType="pager" resultMap="marketboardMap">
		<![CDATA[
		SELECT rnum, market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		FROM (
		  SELECT ROWNUM as rnum, market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		  FROM (
		    SELECT market_no, market_title, market_content, market_writer, market_category, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn
		    FROM marketboards m, likelists l
		    WHERE m.market_no = l.like_list_no and l.like_user_id = #{userId} and l.like_type = 'market'
		    ORDER BY m.market_no desc
		  )
		  WHERE ROWNUM <= #{endRowNo}
		)
		WHERE rnum >= #{startRowNo}
		]]>
	</select>
	
	<select id="selectImageFileByMarketNo" parameterType="int" resultMap="marketFileDtoResult">
		select * from marketfiles
		where market_no = #{marketNo}
	</select>
	
	<delete id="deleteLikeMarket" parameterType="likelist">
		delete from likelists 
		where like_list_no = #{likeListNo} and like_user_id = #{likeUserId} and like_type = #{likeType}
	</delete>
	
	<update id="updateMarketLikeCount" parameterType="Integer">
		UPDATE
		    marketboards   
		SET 
		    market_like_count = market_like_count - 1    
		WHERE    
			market_no = #{marketNo}
	</update>
	
</mapper>