<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.webapp.dao.FreeBoardDao">

	 <resultMap id="freeBoardWithUserResultMap" type="freeboard">
		<result column="free_no" property="freeNo"/>
		<result column="free_title" property="freeTitle"/>
		<result column="free_content" property="freeContent"/>
		<result column="free_writer" property="freeWriter"/>
		<result column="free_regist_date" property="freeRegistDate"/>
		<result column="free_modify_date" property="freeModifyDate"/>
		<result column="free_use_yn" property="freeUseYN"/>
		<result column="free_hit_count" property="freeHitCount"/>
		<association property="userDto" javaType="com.mycompany.webapp.dto.UserDto">
			<result column="user_id" property="userId"/>
			<result column="user_nickname" property="userNickname"/>
		</association>
 	</resultMap>
 	
	<select id="selectByPage" parameterType="pager" resultMap="freeBoardWithUserResultMap">
		SELECT rnum, free_no, free_title, free_writer, free_regist_date, free_use_yn, free_hit_count, user_nickname
		FROM (
		  SELECT ROWNUM as rnum, free_no, free_title, free_writer, free_regist_date, free_use_yn, free_hit_count, user_nickname
		  FROM (
		    SELECT f.free_no, f.free_title, f.free_writer, f.free_regist_date, f.free_hit_count, f.free_use_yn, u.user_nickname
		    FROM freeboards f, users u
		    where f.free_writer = u.user_id and f.free_use_yn = 1
			<if test="searchType ==  'content' and searchContent != null">
		    	and f.free_content like '%'||#{searchContent}||'%'
		    </if>
		    <if test="searchType == 'title' and searchContent != null">
		    	and f.free_title like '%'||#{searchContent}||'%'
		    </if>
		    <if test="searchType ==  'all' and searchContent != null">
	    		and (f.free_content like '%'||#{searchContent}||'%' or f.free_title like '%'||#{searchContent}||'%')
		    </if>		    
		    ORDER BY free_no DESC
		  )
		  WHERE rownum &lt;= #{endRowNo}  
		)
		WHERE rnum &gt;= #{startRowNo}
	</select>
	
	<select id="count" resultType="int">
		SELECT count(*) FROM freeboards
	</select>
	
	<!-- board/view -->
	<select id="selectByFreeNo" parameterType="Integer" resultMap="freeBoardWithUserResultMap">
		select f.free_no, f.free_title, f.free_content, f.free_writer, f.free_regist_date, f.free_modify_date, f.free_use_yn, f.FREE_HIT_COUNT, u.user_nickname
		from freeboards f, users u 
		where f.free_no = #{freeNo} and f.free_writer = u.user_id
	</select>
 	
 	<!-- 모든 내용 insert -->
	<insert id="insert" parameterType="freeboard">
		INSERT INTO freeboards (free_no, free_title, free_content, free_writer, free_regist_date, free_modify_date, free_use_yn, free_hit_count)
		VALUES(#{freeNo}, #{freeTitle}, #{freeContent}, #{freeWriter}, SYSDATE, SYSDATE, 1, 0)
	</insert>
	
	<insert id="update" parameterType="freeboard" >
		update freeboards
		set free_title = #{freeTitle}, free_content=#{freeContent}, free_modify_date=SYSDATE
		where free_no = #{freeNo}
	</insert>
	
	<insert id="freeboardInsert" parameterType="Map">
		<selectKey keyProperty="freeNo" resultType="Integer" order="BEFORE">
			select FREEBOARDS_SEQ.nextval from dual
		</selectKey>
			INSERT INTO freeboards (free_no, free_title, free_content, free_writer, free_regist_date, free_modify_date, free_use_yn, free_hit_count)
			VALUES(#{freeNo}, #{freeTitle}, #{freeContent}, #{freeWriter}, SYSDATE, SYSDATE, 1, 0)
	</insert>

	<!-- //자유게시판 게시물 삭제 (본인의 게시물을 자유게시판에서 삭제하는 것임.) -> 나중에 댓글 지우는것 까지 연계 -->
	<delete id="deleteByFreeNo" parameterType="Integer">
		delete from freeboards
		where free_no = #{freeNo}
	</delete>
	
	<!-- 조회수 올리기 -->
	<update id="updateHitCount" parameterType="Integer">
		update freeboards
		set free_hit_count = free_hit_count + 1
		where free_no = #{freeNo}
	</update>
</mapper>