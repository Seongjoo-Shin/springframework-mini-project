<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.webapp.dao.MarketBoardDao">

	<resultMap id="marketBoardWithUserResultMap" type="marketboard">
	    <result property="marketNo" column="market_no"/>
	    <result property="marketTitle" column="market_title"/>
	    <result property="marketContent" column="market_content"/>
	    <result property="marketWriter" column="market_writer"/>
	    <result property="marketCategory" column="market_category"/>
	    <result property="marketRegistDate" column="market_regist_date"/>
	    <result property="marketModifyDate" column="market_modify_date"/>
	    <result property="marketUseYN" column="market_use_yn"/>
	    <result property="marketHitCount" column="market_hit_count"/>
	    <result property="marketPrice" column="market_price"/>
	    <result property="marketLikeCount" column="market_like_count"/>
	    <result property="marketSaleYN" column="market_sale_yn"/> <!-- 판매중 1 , 판매완료 0 -->
		<association property="userDto" javaType="com.mycompany.webapp.dto.UserDto">
			<result column="user_id" property="userId"/>
			<result column="user_nickname" property="userNickname"/>
		</association>
 	</resultMap>
 	
 	<!-- list에서 page당 가져오는 정보 -->
 	 <select id="selectByPage" parameterType="marketpager" resultMap="marketBoardWithUserResultMap">
 		SELECT rnum, market_no, market_title, market_writer, market_category
 				, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn, user_nickname
		FROM (
		  SELECT ROWNUM as rnum, market_no, market_title, market_writer, market_category
		  					, market_regist_date, market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn, user_nickname
		  FROM (
			SELECT  m.market_no
					,m.market_title
			        ,m.market_writer
			        ,m.market_category
			        ,m.market_regist_date
			        ,m.market_modify_date
			        ,m.market_use_yn
			        ,m.market_hit_count
			        ,m.market_price
			        ,m.market_like_count
			        ,m.market_sale_yn
			        ,m.market_content
			        ,u.user_nickname
			FROM marketboards m, users u
			<choose>
				<when test='!category.equals("") and !align.equals("")'>
					where m.market_writer = u.user_id 
						and m.market_use_yn = 1 
						and m.market_sale_yn = 1 
						and m.MARKET_CATEGORY = #{category}
						<choose>
							<when test="searchType!=null and searchType.equals('내용')">
								and m.market_content like '%'||#{searchContent}||'%' 
							</when>
							<when test="searchType!=null and searchType.equals('제목')">
								and m.market_title like '%'||#{searchContent}||'%' 
							</when>
						</choose>
					ORDER BY market_like_count DESC
				</when>
				<when test='!category.equals("") and align.equals("")'>
					where m.market_writer = u.user_id and m.market_use_yn = 1 and m.market_sale_yn = 1 and m.MARKET_CATEGORY = #{category}	
						<choose>
							<when test="searchType!=null and searchType.equals('내용')">
								and m.market_content like '%'||#{searchContent}||'%' 
							</when>
							<when test="searchType!=null and searchType.equals('제목')">
								and m.market_title like '%'||#{searchContent}||'%' 
							</when>
						</choose>		
					ORDER BY market_no DESC					
				</when>
				<when test='category.equals("") and !align.equals("")'>
					where m.market_writer = u.user_id and m.market_use_yn = 1 and m.market_sale_yn = 1
					<choose>
						<when test="searchType!=null and searchType.equals('내용')">
							and m.market_content like '%'||#{searchContent}||'%' 
						</when>
						<when test="searchType!=null and searchType.equals('제목')">
							and m.market_title like '%'||#{searchContent}||'%' 
						</when>
					</choose>	
					ORDER BY market_like_count DESC
				</when>
  				<otherwise>
					where m.market_writer = u.user_id and m.market_use_yn = 1 and m.market_sale_yn = 1
						<choose>
							<when test="searchType!=null and searchType.equals('내용')">
								and m.market_content like '%'||#{searchContent}||'%' 
							</when>
							<when test="searchType!=null and searchType.equals('제목')">
								and m.market_title like '%'||#{searchContent}||'%' 
							</when>
						</choose>	
					ORDER BY market_no DESC			
				</otherwise>			
			</choose>			
		  )
		  WHERE rownum &lt;= #{endRowNo}  
		)
		WHERE rnum &gt;= #{startRowNo}
 	</select>
 	
 	<!-- market_no 에 따라서 가져오는 marketDto -->
 	<select id="selectMarketBoardByMarketNo" parameterType="Integer" resultMap="marketBoardWithUserResultMap">
		SELECT  m.market_no
				,m.market_title
		        ,m.market_writer
		        ,m.market_content
		        ,m.market_category
		        ,m.market_regist_date
		        ,m.market_modify_date
		        ,m.market_use_yn
		        ,m.market_hit_count
		        ,m.market_price
		        ,m.market_like_count
		        ,m.market_sale_yn
		        ,u.user_nickname
		FROM marketboards m, users u
		where m.market_writer = u.user_id and market_no =#{marketNo} and market_use_yn = 1	
 	</select>
 	
 	<select id="totalCount" parameterType="marketpager" resultType="Integer">
		SELECT count(*)
		FROM marketboards
		<if test='category != null and category.equals("")'>
			where MARKET_CATEGORY = #{category}
		</if>
	</select>
	
	<resultMap id="marketboardMap" type="marketboard">
	    <result property="marketNo" column="market_no"/>
	    <result property="marketTitle" column="market_title"/>
	    <result property="marketContent" column="market_content"/>
	    <result property="marketWriter" column="market_writer"/>
	    <result property="marketCategory" column="market_category"/>
	    <result property="marketRegistDate" column="market_regist_date"/>
	    <result property="marketModifyDate" column="market_modify_date"/>
	    <result property="marketUseYN" column="market_use_yn"/>
	    <result property="marketHitCount" column="market_hit_count"/>
	    <result property="marketPrice" column="market_price"/>
	    <result property="marketLikeCount" column="market_like_count"/>
	    <result property="marketSaleYN" column="market_sale_yn"/>
	</resultMap>
	
	<resultMap type="marketfile" id="marketFileDtoResult">
		<result column="market_no" property="marketNo"/>
		<result column="market_file_no" property="marketFileNo"/>
		<result column="attach_original_name" property="attachOriginalName"/>
		<result column="attach_save_name" property="attachSaveName"/>
		<result column="attach_type" property="attachType"/>
		<result column="market_image_file_data" property="imageFileData"/>
	</resultMap>
	
	<select id="selectImageFileByMarketNo" parameterType="Integer" resultMap="marketFileDtoResult">
		select * from marketfiles where market_no = #{marketNo}
	</select>
	
<!-- 	<insert id="freeboardInsert" parameterType="Map">
		<selectKey keyProperty="freeNo" resultType="Integer" order="BEFORE">
			select FREEBOARDS_SEQ.nextval from dual
		</selectKey>
			INSERT INTO freeboards (free_no, free_title, free_content, free_writer, free_regist_date, free_modify_date, free_use_yn, free_hit_count)
			VALUES(#{freeNo}, #{freeTitle}, #{freeContent}, #{freeWriter}, SYSDATE, SYSDATE, 1, 0)
	</insert> -->
	
	<!-- 게시글 등록 -->
	<insert id="insertMarket" parameterType="marketboard">
		<selectKey keyProperty="marketNo" resultType="Integer" order="BEFORE">
			select MARKETBOARDS_SEQ.nextval from dual
		</selectKey>
			INSERT INTO marketboards (market_no, market_title, market_content, market_writer, market_category, market_regist_date,
										 market_modify_date, market_use_yn, market_hit_count, market_price, market_like_count, market_sale_yn)
			VALUES(#{marketNo}, #{marketTitle}, #{marketContent}, #{marketWriter}, #{marketCategory}, SYSDATE, SYSDATE, 1, 0, #{marketPrice}, 0, 1)							 
	</insert>
	
	<!-- 게시글 파일 DB 저장 -->
	<insert id="insertMarketFile" parameterType="marketfile">
		<selectKey keyProperty="marketFileNo" resultType="Integer" order="BEFORE">
			select MARKETFILES_SEQ.nextval from dual
		</selectKey>
			INSERT INTO MARKETFILES (ATTACH_ORIGINAL_NAME, ATTACH_SAVE_NAME, ATTACH_TYPE, MARKET_NO, MARKET_FILE_NO, MARKET_IMAGE_FILE_DATA)
			VALUES(#{attachOriginalName}, #{attachSaveName}, #{attachType}, #{marketNo}, #{marketFileNo}, #{imageFileData})
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		update marketboards
		set market_hit_count = market_hit_count + 1
		where market_no = #{marketNo}
	</update>
	
	<!-- 좋아요 증가 -->
	<update id="updateLikeCount" parameterType="Integer">
		update marketboards
		set market_like_count = market_like_count + 1
		where market_no = #{marketNo}	
	</update>
	
	<!-- 좋아요 감소 -->
	<update id="updateLikeCountDown" parameterType="Integer">
		update marketboards
		set market_like_count = market_like_count - 1
		where market_no = #{marketNo}	
	</update>
	
	<!-- 판매 완료 -->
	<update id="updateSaleYn" parameterType="Integer">
		update marketboards
		set market_sale_yn = 0
		where market_no = #{marketNo}	
	</update>
	
	<!-- 글 수정 -->
	<update id="updateMarketBoard" parameterType="marketboard">
		update marketboards
		set market_title = #{marketTitle},
			market_content = #{marketContent},
			market_category = #{marketCategory},
			market_modify_date = SYSDATE,
			market_price = #{marketPrice}
		where market_no = #{marketNo}
	</update>
	
	<!-- MarketFileNo를 사용하여 사진 삭제 -->
	<delete id="deleteImageByFileNo" parameterType="Integer">
		delete from marketfiles
		where market_file_no = #{imgNo}
	</delete>
	
	<!-- MarketNo를 사용하여 글과 사진 삭제 -->
	<delete id="deleteMarketBoardByMarketNo" parameterType="Integer">
		delete from marketboards
		where market_no = #{marketNo}
	</delete>
</mapper>


